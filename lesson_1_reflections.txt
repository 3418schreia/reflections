How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Easily see where changes were made.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Avoid common errors and track changes.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros - save changes in bulk, easier to revert changes.
	Cons - you might forget to save and if something happens progress is lost, meaningless checkpoints.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    You could have several pages of code that work together or call on eachother.

How can you use the commands git log and git diff to view the history of files?

    You can view the commits with git log and use that information with git diff to find changes.

How might using version control make you more confident to make changes that
could break something?

    You know that you have a backup or a previous version that works.

Now that you have your workspace set up, what do you want to try using Git for?

    I want to learn how to use Git so I can continue with the DevOps course.
	
Done with lesson 1!